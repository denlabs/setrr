apiVersion: apps/v1
kind: Deployment
metadata:
  name: setrr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: setrr
  template:
    metadata:
      labels:
        app: setrr
    spec:
      containers:
        - name: setrr
          image: denislabelle/setrr:0.0.11
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: setrr-config
                  key: spring_profiles_active
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: setrr-config
                  key: spring_datasource_url
            - name: KAFKA_BOOTSTRAP_SERVERS_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: setrr-config
                  key: kafka_bootstrap_servers_config
            - name: KAFKA_GROUP_ID_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: setrr-config
                  key: kafka_group_id_config
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: setrr-db-secret
                  key: spring_datasource_username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: setrr-db-secret
                  key: spring_datasource_password
---
apiVersion: v1
kind: Service
metadata:
  name: setrr-service
spec:
  selector:
    app: setrr
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: setrr-ingress
  annotations:
    # Warning: annotation "kubernetes.io/ingress.class" is deprecated, use 'spec.ingressClassName' instead
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "TCP"
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  ingressClassName: "nginx"
  rules:
    - host: denilab.ca
      http:
        paths:
          # Existing web service configuration
          - pathType: Prefix
            path: "/leads"
            backend:
              service:
                name: setrr-service
                port:
                  number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: setrr-config
data:
  spring_profiles_active: "dev"
  spring_datasource_url: "jdbc:postgresql://postgres.denilab.ca/postgres?currentSchema=setrr"
  kafka_bootstrap_servers_config: "kafka-service.kafka.svc.cluster.local:9092"
  kafka_group_id_config: "setrr-k-group"
---
apiVersion: v1
kind: Secret
metadata:
  name: setrr-db-secret
type: Opaque
data:
  spring_datasource_username: c2V0cnI=
  spring_datasource_password: c3RpY2t5bm90ZTU0MzI=

